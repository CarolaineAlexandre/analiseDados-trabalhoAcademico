#Dar os nomes corretos as colunas
colnames(dados) = c("genero","raca/etnia","Nivel de educacao dos pais","almoco","curso preparatorio para testes","matematica")
#importa os dados, string vazio como NA, string como fatores
dados = read.cvs("notas-exames.csv", sep=";", na.string="", stringsAsFactors=T)
#importa os dados, string vazio como NA, string como fatores
dados = read.cvs("notas-exames.csv", sep=";")
dados = read.csv(file.choose(), header = TRUE, sep = ",")
dados
dados = read.csv("notas-exames.csv",header = TRUE, sep = ",")
#importa os dados, string vazio como NA, string como fatores
dados = read.cvs("notas-exames.csv", sep=";")
Sys.setenv(LANGUAGE = "Pt")
#Dar os nomes corretos as colunas
colnames(dados) = c("genero","raca/etnia","Nivel de educacao dos pais","almoco","curso preparatorio para testes","matematica")
head(dados)
#Dar os nomes corretos as colunas
colnames(dados) = c("genero","raca/etnia","Nivel de educacao dos pais","almoco","curso preparatorio para testes","matematica")
head(dados)
#intall.packages("xlsx")
library(xlsx)
#importa os dados, string vazio como NA, string como fatores
dados = read.cvs("notas-exames.csv", sep=";")
dados = read.csv(file.choose(), header = TRUE, sep = ",")
dados
dados = read.csv("notas-exames.csv",header = TRUE, sep = ",")
#Dar os nomes corretos as colunas
colnames(dados) = c("genero","raca/etnia","Nivel de educacao dos pais","almoco","curso preparatorio para testes","matematica")
head(dados)
dados = read.csv(file.choose(), header = TRUE, sep = ",")
dados
dados = read.csv("notas-exames.csv",header = TRUE, sep = ",")
#genero
count = table(dados$gender)
barplot(counts, main="Genero", xlab"Genero")
#genero
count = table(dados$gender)
barplot(counts, main="Genero", xlab="Genero")
#genero
count = table(dados$gender)
barplot(counts, main="Genero", xlab="Genero")
#genero
count = table(dados$gender)
barplot(counts, main="genero", xlab="genero")
#genero
count = table(dados$gender)
barplot(counts, main="genero", xlab="genero")
#genero
counts = table(dados$gender)
barplot(counts, main="genero", xlab="genero")
#genero
counts = table(dados$gender)
barplot(counts, main="Gênero", xlab="gênero")
#raca/etnia
counts = table(dados$race.ethnicity)
barplot(counts, main="Etnia", xlab="Etnia")
#raca/etnia
counts = table(dados$race.ethnicity)
#genero
counts = table(dados$parent_education_level)
barplot(counts, main="Nível de educação dos pais", xlab="Nível de educação dos pais")
#nível de esucação dos pais
counts = table(dados$parent_education_level)
barplot(counts, main="Nível de educação dos pais", xlab="Nível de educação dos pais")
#etnia
counts = table(dados$race.ethnicity)
barplot(counts, main="Etnia", xlab="Etnia")
#se tinham acesso a almoço
counts = table(dados$lunch)
barplot(counts, main="Acesso a almoço", xlab="Acesso a almoço")
#se o aluno fez o curso de preparação para o teste
counts = table(dados$test_prep_course)
barplot(counts, main="Curso preparatório para testes", xlab="Curso preparatório para testes")
#notas do teste
counts = table(dados$math)
barplot(counts, main="Nota teste", xlab="Nota teste")
#notas do teste
counts = table(dados$math)
barplot(counts, main="Nota teste", xlab="Nota teste")
#notas do teste
counts = table(dados$math)
barplot(counts, main="Nota teste", xlab="Nota teste")
#notas do teste
counts = table(dados$math)
barplot(counts, main="Nota teste", xlab="Nota teste")
#notas do teste
counts = table(dados$math)
barplot(counts, main="Nota teste x alunos", xlab="Nota teste")
#genero
counts = table(dados$gender)
barplot(counts, main="Gênero x alunos", xlab="gênero")
#nível de educação dos pais
counts = table(dados$parent_education_level)
barplot(counts, main="Nível de educação dos pais x alunos", xlab="Nível de educação dos pais")
#etnia
counts = table(dados$race.ethnicity)
barplot(counts, main="Etnia x alunos", xlab="Etnia")
#se tinham acesso a almoço
counts = table(dados$lunch)
barplot(counts, main="Acesso a almoço x alunos", xlab="Acesso a almoço")
#notas do teste
counts = table(dados$math)
barplot(counts, main="Nota teste x alunos", xlab="Nota teste")
#curso
summary(dados$curso)
#analise histograma - pacote lattice
library(lattice)
#histograma
histogram(race.ethnicity$math, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "", nint=5)
#histograma
histogram(race.ethnicity$math, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(Math$math, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(Math$, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(Math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(Math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "closure", nint=5)
#histograma
histogram(Math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "", nint=5)
#histograma
histogram(Math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
histogram(math$race.ethnicity, main="Etnia", xlab="Nota", aspect=2, type= "percent", nint=5)
#histograma
hist(math,xlab = "nota",col = "red",border = "black")
#histograma
hist(dados,xlab = "nota",col = "red",border = "black")
#histograma
hist(Math,xlab = "nota",col = "red",border = "black")
#histograma
hist(gender,xlab = "nota",col = "red",border = "black")
#histograma
hist(dados,xlab = "nota",col = "red",border = "black")
#histograma
hist.default(dados, xlab = "nota",col = "red",border = "black")
#histograma
x -> math
hist(x, xlab = "nota",col = "red",border = "black")
#histograma
def vis_dist(df, col):
#histograma
race.ethnicity
#histograma
race.ethnicity
#histograma
math
#histograma
race.ethnicity
#histograma
math
#histograma
math
histogram(math$race.ethnicity)
#histograma
math
histogram(math$race.ethnicity)
math
hist(math$race.ethnicity)
math
hist(dados$math)
math
hist(dados$race.ethnicity)
math
hist(dados$math)
#histograma
math
histogram(dados$math)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity), FUN=sum)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity), FUN=sum)
#condicional
histogram( ~dados | math, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(math$race.ethnicity), FUN=sum)
#condicional
histogram( ~dados | math, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$race.ethnicity, by=list(math$race.ethnicity), FUN=sum)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$race.ethnicity, by=list(dados$race.ethnicity), FUN=sum)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity), FUN=sum)
#condicional
histogram( ~dados | math, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity), FUN=sum)
aggregate(dados$math, by=list(dados$math), FUN=sum)
#condicional
histogram( ~dados | math, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$dados, by=list(dados$race.ethnicity), FUN=sum)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$race.ethnicity, by=list(dados$race.ethnicity), FUN=sum)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$dados, by=list(dados$race.ethnicity), FUN=sum)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity), FUN=sum)
aggregate(dados$math, by=list(dados$math), FUN=sum)
#condicional
histogram( ~dados | math, data=math)
#histograma
math
histogram(dados$race.ethnicity)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$race.ethnicity, by=list(dados$race.ethnicity), FUN=sum)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity), FUN=sum)
aggregate(dados$math, by=list(dados$math), FUN=sum)
#condicional
histogram( ~dados | math, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity), FUN=sum)
#condicional
#histogram( ~dados | math, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity))
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity))
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity))
#histograma
math
histogram(dados$math)
#agregando dados
aggregate(dados$math, by=list(dados$race.ethnicity))
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram( ~dados | race.ethnicity, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram( ~dados | race.ethnicity, data=dados)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram( ~dados | race.ethnicity, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram.formula(~dados | race.ethnicity, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram(~dados | race.ethnicity, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram(~dados | race.ethnicity, data=dados)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram(~dados | race.ethnicity, data=dados)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
histogram(~dados | race.ethnicity, data=math)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
#histogram(~dados | race.ethnicity, data=math)
histogram.formula(~dados | race.ethnicity, data = math)
#histograma
math
histogram(dados$math)
#agregando dados
#aggregate(dados$math, by=list(dados$race.ethnicity))
#condicional
#histogram(~dados | race.ethnicity, data=math)
#histogram.formula(~dados | race.ethnicity, data = math)
do.breaks(as.numeric(endpoints), nint)
#histograma
math
histogram(dados$math)
#condicional
histogram(~dados | race.ethnicity, data=math)
#histograma
math
histogram(dados$math)
#condicional
histogram(~dados | race.ethnicity)
#histograma
math
histogram(dados$math)
#condicional
histogram(~dados | race.ethnicity, data=math)
#histograma
math
histogram(dados$math)
#condicional
histogram(~dados |lunch, data=math)
#histograma
math
histogram(dados$math)
#condicional
histogram(~dados |lunch, data=lunch)
#histograma
math
histogram(dados$math)
#condicional
histogram(~dados |lunch, data=dados)
#histograma
math
histogram(dados$math)
#condicional
histogram(~dados |lunch, data=math)
#histograma
math
histogram(dados$math)
#condicional
histogram(~math |lunch, data=dados)
#histograma
math
histogram(dados$math)
#condicional
histogram(~math |lunch, data=dados)
histogram(~math |race.ethnicity, data=dados)
#histograma
math
histogram(dados$lunch)
#histograma
math
histogram(dados$math)
#condicional
histogram(~math |lunch, data=dados)
histogram(~math |race.ethnicity, data=dados)
#dispersão
xplot(math$parent_education_level)
#dispersão
xplot(dados$parent_education_level)
#dispersão
xplot(dados$math)
#dispersão
xplot(dados$gender)
#dispersão
xplot(math$gender)
#dispersão
dados
xplot(math$gender)
#dispersão
math
xplot(math$gender)
#dispersão
math
xplot(dados$math)
#histograma
math
histogram(dados$math)
#condicional
histogram(~math |lunch, data=dados)
histogram(~math |race.ethnicity, data=dados)
histogram(~math |parent_education_level, data=dados)
#histograma
math
histogram(dados$math)
#condicional
histogram(~math |lunch, data=dados)
histogram(~math |race.ethnicity, data=dados)
histogram(~math |parent_education_level, data=dados)
histogram(~math |test_prep_course, data=dados)
#notas do teste
counts = table(dados$test_prep_course)
barplot(counts, main="Curso preparatório x alunos", xlab="Nota teste")
#dispersão
math
dotplot(dados$math ~ dados$test_prep_course)
#dispersão
math
dotplot(dados$math ~ dados$test_prep_course | dados$test_prep_course)
#dispersão
math
dotplot(dados$math ~ dados$test_prep_course | dados$parent_education_level)
```{r}
#dispersão
xyplot(dados$math ~ dados$race.ethnicity)
#dispersão
xyplot(dados$math ~ dados$parent_education_level)
#dispersão
xyplot(dados$math ~ dados$lunch)
#dispersão
xyplot(dados$math ~ math$lunch)
#dispersão
xyplot(dados$math)
#dispersão
xyplot(dados$math | dados$lunch)
#dispersão
xyplot(dados$math ~ dados$lunch | dados$parent_education_level)
#dispersão
math
xyplot(dados$math ~ dados$lunch | dados$parent_education_level)
#gráfico de pontos - estatistica
dotplot(dados$math ~ dados$test_prep_course, data = dados)
dotplot(dados$math ~ dados$test_prep_course | dados$parent_education_level)
#gráfico de pontos - estatistica
dotplot(dados$math ~ dados$test_prep_course | dados$parent_education_level)
#gráfico de pontos - estatistica
dotplot(dados$math ~ dados$lunch | dados$parent_education_level)
#intall.packages("xlsx")
library(xlsx)
#intall.packages("xlsx")
library(xlsx)
#intall.packages("xlsx")
library(xlsx)
#gráfico de pontos - estatistica
dotplot(dados$math ~ dados$lunch | dados$parent_education_level)
boxplot(dados$math, main = )
boxplot(dados$math, main = "")
boxplot(dados$math, main = "notas", xlab="NOtas", col="red")
boxplot(dados$math, main = "notas", xlab="NOtas", col="red")
boxplot.stats(dados$math)
boxplot(math$gender, main = "notas", xlab="NOtas", col="red")
boxplot(dados$lunch, main = "notas", xlab="NOtas", col="red")
boxplot(dados$math, main = "notas", xlab="NOtas", col="red")
boxplot.stats(dados$math)
boxplot(dados$math, main = "notas", xlab="NOtas", col="red")
boxplot.stats(dados$math)
boxplot(math)
boxplot(dados$math, main = "notas", xlab="NOtas", col="red")
boxplot.stats(dados$math)
boxplot(dados)
boxplot(dados$math, main = "Dados das Notas do exame", xlab="Notas", col="red")
boxplot.stats(dados$math)
boxplot(dados$math, main = "Dados das Notas do exame", xlab="Notas", col="yellow")
boxplot.stats(dados$math)
boxplot(dados$math, main = "Dados das Notas do exame", xlab="Notas", col="blue")
boxplot.stats(dados$math)
